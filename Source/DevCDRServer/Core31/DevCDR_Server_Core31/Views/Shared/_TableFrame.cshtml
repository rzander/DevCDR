<script type="text/javascript">
    $(document).ready(function () {
        var ajaxurl = '/Frame/GetData?customerid=@ViewData["customerid"]&exp=@ViewData["exp"]&token=@ViewData["token"]';

        var table = $('#test').DataTable({
            "lengthMenu": [[15, 25, 50, -1], [15, 25, 50, "All"]],
            buttons: [
                {
                    text: '<span class="fa fa-check"></span>',
                    action: function () {
                        table.rows().select();
                    },
                    titleAttr: 'select All'
                },
                {
                    text: '<span class="fa fa-times"></span>',
                    action: function () {
                        table.rows().deselect();
                    },
                    titleAttr: 'select None'
                },
                {
                    extend: 'copyHtml5',
                    text: '<span class="fa fa-files-o"></span>',
                    titleAttr: 'Copy',
                    exportOptions: {
                        rows: {
                            selected: true
                        }
                    }
                },
                {
                    text: '<span class="fa fa-floppy-o"></span>',
                    action: function (e, dt, button, config) {
                        var data = dt.buttons.exportData();

                        $.fn.dataTable.fileSave(
                            new Blob([JSON.stringify(data)]),
                            'Export.json'
                        );
                    },
                    titleAttr: 'Save as JSON',
                    exportOptions: {
                        rows: {
                            selected: true
                        }
                    }
                }
            ],
            "ajax": {
                "url": ajaxurl,
                "dataSrc": "data"
            },
            stateSave: true,
            deferRender: true,
            "columns": [
                { "data": "Hostname" },
                { "data": "Internal IP" },
                {
                    "data": "Last Reboot",
                    "render": function (data) {
                        var date = new Date(data);
                        return date.getFullYear() + '-' + (date.getMonth() + 1).pad(2) + '-' + date.getDate().pad(2) + ' ' + date.getHours().pad(2) + ':' + date.getMinutes().pad(2) + ':' + date.getSeconds().pad(2);
                    }
                },
                { "data": "Reboot Pending" },
                { "data": "Users Online" },
                { "data": "OS" },
                { "data": "Version" },
                { "data": "Arch" },
                { "data": "Lang" },
                { "data": "ScriptResult" },
                { "data": "Groups", "visible": false },
                { "data": "User", "visible": false },
                { "data": "id", "visible": false },
                { "data": "Customer", "visible": false }
            ],
            rowId: 'id',
            select: true,
            colReorder: true,
            responsive: true,
            dom: '<"top"Bi>frt<"bottom"lp><"clear">'
        });

        //var groupurl = '/DevCDR/Groups';
        //$.post(groupurl, "",
        //    function (data, status) {
        //        jQuery.each(data, function (i, val) {
        //            $('<li><a href="#' + val + '" data-toggle="tab">' + val + '</a></li>').appendTo('#tabs');
        //        });
        //    });

    });

    //$('#tabs').on('shown.bs.tab', function (e) {
    //    var group = e.target.hash.replace('#', '')
    //    var table = $('#test').DataTable();
        
    //    table.ajax.url('/DevCDR/GetData?Group=' + group).load();
    //    //console.log(table.ajax.url);
    //    //table.ajax.reload();
    //    //$('#test').DataTable().search(e.target.hash.replace('#', '')).draw();
    //    }
    //)

    $(function () {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("@ViewData["Route"].ToString()")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        var tTimer;
        var iCount = 0;
        var lastReload = new Date();

        connection.on("newData", (Name, Status) => {
            //console.log(Status);
            //1s queue but 10s max
            if ((new Date() - lastReload) < 10000) { clearTimeout(tTimer); } else { lastReload = new Date(); iCount = 0 };
            //load first request
            if (iCount > 1) {
                tTimer = setTimeout(reloadData, 1000); //1s queue
                //console.log("set Timer");
            } else {
                reloadData();
            }
            iCount++;
        });

        connection.start()
            .then(() => {
                //console.log('Connection started!');
                connection.invoke('JoinGroup', 'web');
            })
        //connection.invoke("JoinGroup", "web").catch(err => console.error(err.toString()));

    });

    function reloadData() {
        //console.log("reload Data");
        var table = $('#test').DataTable();
        table.ajax.reload(null, false);
    }
    Number.prototype.pad = function (size) {
        var s = String(this);
        while (s.length < (size || 2)) { s = "0" + s; }
        return s;
    }
</script>